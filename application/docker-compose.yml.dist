services:
  application-service-web:
    container_name: application-service-web
    build: 
      context: ./docker/nginx
      args: 
        UID: $U_ID
    ports:
      - 1100:80
    volumes: 
      - ./public:/appdata/www/public
    depends_on:
      - application-service-be
      - application-service-db
    networks:
      - app-network
  application-service-ngrock:
    container_name: application-service-ngrock
    image: ngrok/ngrok:latest
    ports:
      - 4050:4040
    environment:
      NGROK_PROTOCOL: http
      NGROK_PORT: application-service-web:80
      NGROK_AUTHTOKEN: 1hAuncyRFE9MNCm4QPP3cmtJBCd_4vXeA6ZZeXuAyLb8nmAFS
    command: http application-service-web:80
    depends_on:
      - application-service-web
    networks:
      - app-network
  application-service-be:
    container_name: application-service-be
    build:
      context: docker/php
      args:
        UID: $U_ID
    volumes:
      - ./:/appdata/www
    env_file:
      - .env
    networks:
      - app-network
  application-service-db:
    container_name: application-service-db
    build:
      context: ./docker/mysql
    ports:
      - 10100:3306
    environment:
      MYSQL_DATABASE: application_database
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - application-service-db-data:/var/lib/mysql
    networks:
      - app-network
    command: [ 'mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci' ]

volumes:
  application-service-db-data:

networks:
  app-network:
    external: true


